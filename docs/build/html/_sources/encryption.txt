============
Encryption
============


Synopsis
------------

This module allows the users to encrypt or decrypt a file. 

Encryption is the process of encoding messages or information in such a way that only authorized parties can read it. Encryption does not of itself prevent interception, but denies the message content to the interceptor. In an encryption scheme, the message or information, referred to as plaintext, is encrypted using an encryption algorithm, generating cipher text that can only be read if decrypted. For technical reasons, an encryption scheme usually uses a pseudo-random key generated by an algorithm. It is in principle possible to decrypt the message without possessing the key, but, for a well-designed encryption scheme, large computational resources and skill are required. An authorized recipient can easily decrypt the message with the key provided by the originator to recipients, but not to unauthorized interceptors.

Let us see how to use this module in encrypting and decrypting a file or string.


Help Command
-------------------

The help command is a brief user manual that assists the users in handling this module. It specifies the alternative parameters that can be used in declaring. It also specifies the possible functions under this encryption module, along with the syntax for using them. The command used for declaring help option is shown below,

.. code-block:: bash

	ptconfigure encryption help


The syntax for declaring the help command is not case sensitive which is an added advantage. The following screenshot visualize you about the help command under encryption.


.. code-block:: bash



 kevell@corp:/# ptconfigure encryption help

 ******************************


 This command allows you to encrypt or decrypt a file.  

 Encryption, encrypt  

 - install        
	Encrypts a file or string        
 	example: sudo ptconfigure encryption install --yes --unencrypted-data=/var/www/a-website/build/config/ptconfigure/SSH/raw/bastion        
	 --encryption-target-file=/tmp/encrypted --encryption-key=/root/.ptconfigure/SSH/key --encryption-file-permissions=""                
	 --encryption-file-owner="" --encryption-file-group=""                

 - uninstall        
	Decrypts an encrypted file or string        
	example: sudo ptconfigure encryption uninstall --yes --encrypted-data=/tmp/encrypted        
	 --encryption-target-file=/var/www/a-website/build/config/ptconfigure/SSH/raw/bastion --encryption-key=/root/.ptconfigure/SSH/key                	 --encryption-file-permissions="" --encryption-file-owner="" --encryption-file-group=""                

 ------------------------------
 End Help
 ******************************



Install
--------


This functions allows the users to encrypt a file or string by simply using the command as given below,


.. code-block:: bash
	
	 sudo ptconfigure encryption install --yes --unencrypted-data=/var/www/a-website/build/config/ptconfigure/SSH/raw/bastion
 	--encryption-target-file=/tmp/encrypted --encryption-key=/root/.ptconfigure/SSH/key --encryption-file-permissions=""                
	 --encryption-file-owner="" --encryption-file-group=""                

To implement this function, the user have to specify the following fields in the format of above mentioned syntax,

* encryption target file
* encryption key
* SSH key
* encryption file permission
* encryption file owner
* encryption file group


.. code-block:: bash

 kevell@corp# ptconfigure encryption install
 Install Encryption Functionality? (Y/N) 
 y
 *******************************
 *        Pharaoh Tools        *
 *         Encryption !        *
 *******************************
 [Pharaoh Logging] Package php5-mcrypt from the Packager Apt is already installed, so not installing
 Enter either a filepath or raw data to encrypt
 /home/kevell/Desktop/test
 Enter output file path:
 /home/kevell/Desktop/tester
 Enter Encryption Key
 123
 Enter permissions for output file (Empty is okay):
 
 Enter Owner for output file (Empty is okay):

 Enter Group for output file (Empty is okay):

 ... All done!
 *******************************
 Thanks for installing , visit www.pharaohtools.com for more
 ******************************


 Single App Installer:
 --------------------------------------------
 Encryption: Success
 ------------------------------
 Installer Finished
 ******************************

Uninstall
-----------

This function allows the users to decrypt an encrypted file or string. This can be achieved by using the command below,

.. code-block:: bash

	sudo ptconfigure encryption uninstall --yes --encrypted-data=/tmp/encrypted
	 --encryption-target-file=/var/www/a-website/build/config/ptconfigure/SSH/raw/bastion --encryption-key=/root/.ptconfigure/SSH/key                	 --encryption-file-permissions="" --encryption-file-owner="" --encryption-file-group=""                


To implement this function, the user have to specify the following fields in the format of above mentioned syntax,

* encryption target file
* encryption key
* SSH key
* encryption file permission
* encryption file owner
* encryption file group


.. code-block:: bash

 kevell@corp:/# ptconfigure encryption uninstall
 Uninstall Encryption Functionality? (Y/N) 
 y
 *******************************
 *        Pharaoh Tools        *
 *         Encryption !        *
 *******************************
 [Pharaoh Logging] Package php5-mcrypt from the Packager Apt is already installed, so not installing
 Enter either a filepath or raw data to decrypt
 /home/kevell/Desktop/tester
 Enter output file path:
 /home/kevell/Desktop/testing
 Enter Encryption Key
 123
 Enter permissions for output file (Empty is okay):
 
 Enter Owner for output file (Empty is okay):

 Enter Group for output file (Empty is okay):

 ... All done!
 *******************************
 Thanks for installing , visit www.pharaohtools.com for more
 ******************************


 Single App Uninstaller:
 ------------------------------
 Encryption: Success
 ------------------------------
 Installer Finished
 ******************************


Alternative Parameters
------------------------------


The alternative parameters for this module, either of which can be used in declaration is,

* Encryption
* encrypt


Benefits
---------

* The parameters used in help and encryption and un decryption operations are not case sensitive which is an added advantage while compared
  to others.
* It is well-to-do in both Ubuntu and as well as Cent OS.
* It is a secured mode, because only authorized person can use them.
