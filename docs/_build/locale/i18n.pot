# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, Eric Holscher, Charlie Leifer, Bobby Grace
# This file is distributed under the same license as the Read The Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Read The Docs 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-04 11:40+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../i18n.rst:4
# e81f7e89468949219d59efb5e94166ef
msgid "Internationalization"
msgstr ""

#: ../../i18n.rst:7
# 128958adc7714496b0d91b9d51fce45a
msgid "This document covers the details regarding internationalization and localization that are applied in Read the Docs. The guidelines described are mostly based on `Kitsune's localization documentation <http://kitsune.readthedocs.org/en/latest/localization.html>`_."
msgstr ""

#: ../../i18n.rst:12
# 3077754897494197bd6cc2a9b57c4371
msgid "As with most of the Django applications out there, Read the Docs' i18n/l10n framework is based on `GNU gettext <http://www.gnu.org/software/gettext/>`_. Crowd-sourced localization is optionally available at `Transifex <https://www.transifex.com/projects/p/readthedocs/>`_."
msgstr ""

#: ../../i18n.rst:17
# 6ddb6cf841f446c2a0ede4b877e2f113
msgid "For more information about the general ideas, look at this document: http://www.gnu.org/software/gettext/manual/html_node/Concepts.html"
msgstr ""

#: ../../i18n.rst:22
# 82ed30303ade4060be659eaf620fbe00
msgid "Making Strings Localizable"
msgstr ""

#: ../../i18n.rst:24
# f216d547551e4ecfb8906c8a0253982c
msgid "Making strings in templates localizable is exceptionally easy. Making strings in Python localizable is a little more complicated. The short answer, though, is to just wrap the string in ``_()``."
msgstr ""

#: ../../i18n.rst:30
# c1b1812a2e4c4932a0951a30f5a0f3de
msgid "Interpolation"
msgstr ""

#: ../../i18n.rst:32
# 63922d64745e42758f9be74b23110cad
msgid "A string is often a combination of a fixed string and something changing, for example, ``Welcome, James`` is a combination of the fixed part ``Welcome,``, and the changing part ``James``. The naive solution is to localize the first part and then follow it with the name::"
msgstr ""

#: ../../i18n.rst:39
# f326d930a1224292a31a9f0c4aed5e79
msgid "This is **wrong!**"
msgstr ""

#: ../../i18n.rst:41
# ee555ba91d2d4a139d0edfcb218c2f04
msgid "In some locales, the word order may be different. Use Python string formatting to interpolate the changing part into the string::"
msgstr ""

#: ../../i18n.rst:46
# 6aa8eb74e63f42369a6bdf64be42a822
msgid "Python gives you a lot of ways to interpolate strings. The best way is to use Py3k formatting and kwargs. That's the clearest for localizers."
msgstr ""

#: ../../i18n.rst:51
# e22baa438aa44e2abcda1e1dfcd3e028
msgid "Localization Comments"
msgstr ""

#: ../../i18n.rst:53
# 39b9a2a4923b48bda6fbe702ea467a86
msgid "Sometimes, it can help localizers to describe where a string comes from, particularly if it can be difficult to find in the interface, or is not very self-descriptive (e.g. very short strings). If you immediately precede the string with a comment that starts with ``Translators:``, the comment will be added to the PO file, and visible to localizers."
msgstr ""

#: ../../i18n.rst:59
#: ../../i18n.rst:93
# 05eb39f2555245d09fc1350af6d25691
# 2709fc87f52146f49f21807730992ee6
msgid "Example::"
msgstr ""

#: ../../i18n.rst:76
# a4bc7c9a1ee14196858aa0777033f0ba
msgid "Adding Context with msgctxt"
msgstr ""

#: ../../i18n.rst:78
# 7e9f283d0fec4f9cbb5b040fb0bc1a8d
msgid "Strings may be the same in English, but different in other languages. English, for example, has no grammatical gender, and sometimes the noun and verb forms of a word are identical."
msgstr ""

#: ../../i18n.rst:82
# 5cb6e4851d2d4446a394e3b0bf83a6db
msgid "To make it possible to localize these correctly, we can add \"context\" (known in gettext as *msgctxt*) to differentiate two otherwise identical strings. Django provides a :func:`~django.utils.translation.pgettext()` function for this."
msgstr ""

#: ../../i18n.rst:86
# 9ed767255e6f4d71883942b67badc0a0
msgid "For example, the string *Search* may be a noun or a verb in English. In a heading, it may be considered a noun, but on a button, it may be a verb. It's appropriate to add a context (like *button*) to one of them."
msgstr ""

#: ../../i18n.rst:90
# 1da8ca41f2a144f2b3587c7cd56a616b
msgid "Generally, we should only add context if we are sure the strings aren't used in the same way, or if localizers ask us to."
msgstr ""

#: ../../i18n.rst:101
# 0b41eb64bc0947ab84fbffecc7eb1ef1
msgid "Plurals"
msgstr ""

#: ../../i18n.rst:103
# ec864f875ac841f1a26c6fd90069bd64
msgid "*You have 1 new messages* grates on discerning ears. Fortunately, gettext gives us a way to fix that in English *and* other locales, the :func:`~django.utils.translation.ngettext()` function::"
msgstr ""

#: ../../i18n.rst:109
# 7e39b90e525f4ddd9ba2cedfd37b61a7
msgid "A more realistic example might be::"
msgstr ""

#: ../../i18n.rst:115
# 2e1b523df8e644489ce4eb6192e71759
msgid "This method takes three arguments because English only needs three, i.e., zero is considered \"plural\" for English. Other languages may have `different plural rules <http://translate.sourceforge.net/wiki/l10n/pluralforms>`_, and require different phrases for, say 0, 1, 2-3, 4-10, >10. That's absolutely fine, and gettext makes it possible."
msgstr ""

#: ../../i18n.rst:123
# 5e705592c09b46b1999e88e99988e0b4
msgid "Strings in Templates"
msgstr ""

#: ../../i18n.rst:125
# a5ea480476b648249306661784557fd8
msgid "When putting new text into a template, all you need to do is wrap it in a ``{% trans %}`` template tag::"
msgstr ""

#: ../../i18n.rst:130
# d7a1253f6dc34e22961ae395f2914dbe
msgid "Context can be added, too::"
msgstr ""

#: ../../i18n.rst:134
# 80bfa516c6634047b21a5b676f632b2a
msgid "Comments for translators need to precede the internationalized text and must start with the ``Translators:`` keyword.::"
msgstr ""

#: ../../i18n.rst:140
# d5fc07249cd34ee9a55e244234d39c9a
msgid "To interpolate, you need to use the alternative and more verbose ``{% blocktrans %}`` template tag â€” it's actually a block::"
msgstr ""

#: ../../i18n.rst:145
# cd998c3e119f4129bb71331e734b027e
msgid "Note that the ``{{ name }}`` variable needs to exist in the template context."
msgstr ""

#: ../../i18n.rst:147
# a8fe25d6f450481fae53d22d22a78c26
msgid "In some situations, it's desirable to evaluate template expressions such as filters or accessing object attributes. You can't do that within the ``{% blocktrans %}`` block, so you need to bind the expression to a local variable first::"
msgstr ""

#: ../../i18n.rst:158
# b6d0e6353d2e43e1abc0ae53d9881a22
msgid "``{% blocktrans %}`` also provides pluralization. For that you need to bind a counter with the name ``count`` and provide a plural translation after the ``{% plural %}`` tag::"
msgstr ""

#: ../../i18n.rst:170
# 6bb262690dfd4a7f8eb63b52021bf183
msgid "Strings in Python"
msgstr ""

#: ../../i18n.rst:174
# e79240f04db24191a02fb2d8267eb834
msgid "Whenever you are adding a string in Python, ask yourself if it really needs to be there, or if it should be in the template. Keep logic and presentation separate!"
msgstr ""

#: ../../i18n.rst:178
# 49f39e5e7d9a40548c263321cc9eeec1
msgid "Strings in Python are more complex for two reasons:"
msgstr ""

#: ../../i18n.rst:180
# 25774d2fbdf24ddabb087570977286b5
msgid "We need to make sure we're always using Unicode strings and the Unicode-friendly versions of the functions."
msgstr ""

#: ../../i18n.rst:183
# 2d1ef64a96294b94b866afb711d37899
msgid "If you use the :func:`~django.utils.translation.ugettext` function in the wrong place, the string may end up in the wrong locale!"
msgstr ""

#: ../../i18n.rst:186
# d16d08e39e154ee7ace817fe5dfab2fa
msgid "Here's how you might localize a string in a view::"
msgstr ""

#: ../../i18n.rst:196
# b4f5a9c5a97741fb93895af64f1174bc
msgid "Interpolation is done through normal Python string formatting::"
msgstr ""

#: ../../i18n.rst:200
# 30320a4f5761461a88e6d3f6333a2294
msgid "Context information can be supplied by using the :func:`~django.utils.translation.pgettext` function::"
msgstr ""

#: ../../i18n.rst:205
# 5817ddbdc8374e6888d5aa5e4911a8a0
msgid "Translator comments are normal one-line Python comments::"
msgstr ""

#: ../../i18n.rst:210
# 91c565d5b3ef44568110bd15590fb168
msgid "If you need to use plurals, import the :func:`~django.utils.translation.ungettext` function::"
msgstr ""

#: ../../i18n.rst:220
# f471b1aa78e64235ba62edd354a5bca6
msgid "Lazily Translated Strings"
msgstr ""

#: ../../i18n.rst:222
# 837167e19285462dac1b905167618466
msgid "You can use :func:`~django.utils.translation.ugettext` or :func:`~django.utils.translation.ungettext` only in views or functions called from views. If the function will be evaluated when the module is loaded, then the string may end up in English or the locale of the last request!"
msgstr ""

#: ../../i18n.rst:227
# 98a0881e9f104317883918c26c926599
msgid "Examples include strings in module-level code, arguments to functions in class definitions, strings in functions called from outside the context of a view. To internationalize these strings, you need to use the ``_lazy`` versions of the above methods, :func:`~django.utils.translation.ugettext_lazy` and :func:`~django.utils.translation.ungettext_lazy`. The result doesn't get translated until it is evaluated as a string, for example by being output or passed to ``unicode()``::"
msgstr ""

#: ../../i18n.rst:241
# 08ce7aa8e42c4377994d6d96dae4c977
msgid "In case you want to provide context to a lazily-evaluated gettext string, you will need to use :func:`~django.utils.translation.pgettext_lazy`."
msgstr ""

#: ../../i18n.rst:246
# ec320b52b4b34aaf9792a23f526be944
msgid "Administrative Tasks"
msgstr ""

#: ../../i18n.rst:249
# 729cc61f6a974e31b56d33a9a7c17032
msgid "Updating Localization Files"
msgstr ""

#: ../../i18n.rst:251
# 6f0cb4299a4c4244ac44ef2482d2e1c5
msgid "To update the translation source files (eg if you changed or added translatable strings in the templates or Python code) you should run ``python manage.py makemessages -l <language>`` in the ``readthedocs/`` directory (substitute ``<language>`` with a valid language code)."
msgstr ""

#: ../../i18n.rst:256
# a07afb4abce74a27b75af467aedb0dde
msgid "The updated files can now be localized in a `PO editor <https://en.wikipedia.org/wiki/Category:Software-localization_tools>`_ or crowd-sourced online translation tool."
msgstr ""

#: ../../i18n.rst:264
# 7821cfa7198e4e02b80c866fae08a431
msgid "Compiling to MO"
msgstr ""

#: ../../i18n.rst:266
# 8715a7ac6dac47f188ca3a38c863d4fd
msgid "Gettext doesn't parse any text files, it reads a binary format for faster performance. To compile the latest PO files in the repository, Django provides the ``compilemessages`` management command. For example, to compile all the available localizations, just run::"
msgstr ""

#: ../../i18n.rst:273
# 748f70b3105642818c440074fceb9350
msgid "You will need to do this every time you want to push updated translations to the live site."
msgstr ""

#: ../../i18n.rst:276
# 6ae4b5a49ce0402ca9fe018c43bbd664
msgid "Also, note that it's not a good idea to track MO files in version control, since they would need to be updated at the same pace PO files are updated, so it's silly and not worth it. They are ignored by ``.gitignore``, but please make sure you don't forcibly add them to the repository."
msgstr ""

#: ../../i18n.rst:283
# 8f2881911c1a4c5c8d80977d157f7681
msgid "Transifex Integration"
msgstr ""

#: ../../i18n.rst:285
# ddc929d5feda4d84a034e69e32210e59
msgid "To push updated translation source files to Transifex, run ``tx push -s`` (for English) or ``tx push -t <language>`` (for non-English)."
msgstr ""

#: ../../i18n.rst:288
# dafb104e617a46e98d65cc256e85d19a
msgid "To pull changes from Transifex, run ``tx pull -a``. Note that Transifex does not compile the translation files, so you have to do this after the pull (see the :ref:`i18n-compiling` section)."
msgstr ""

#: ../../i18n.rst:292
# 1d321ffb3bbe464490e98b7b5a4d93a1
msgid "For more information about the ``tx`` command, read the `Transifex client's help pages <http://help.transifex.com/features/client/>`_."
msgstr ""

